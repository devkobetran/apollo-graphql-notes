"use strict";(self.webpackChunkelasticstack_notes=self.webpackChunkelasticstack_notes||[]).push([[3976],{619:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var i=t(4848),s=t(8453);const o={sidebar_position:1},r="Introduction",a={id:"intro",title:"Introduction",description:"Introduction to Apollo GraphQL",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/apollo-graphql-notes/docs/intro",draft:!1,unlisted:!1,editUrl:"https://github.com/devkobetran/apollo-graphql-notes/docs/intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Environment Setup",permalink:"/apollo-graphql-notes/docs/environment-setup"}},l={},c=[{value:"Introduction to Apollo GraphQL",id:"introduction-to-apollo-graphql",level:2},{value:"Catstronauts Example Application",id:"catstronauts-example-application",level:2},{value:"Schema First Design",id:"schema-first-design",level:3},{value:"Benefits of schema-first design",id:"benefits-of-schema-first-design",level:3}];function d(e){const n={h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"introduction",children:"Introduction"})}),"\n",(0,i.jsx)(n.h2,{id:"introduction-to-apollo-graphql",children:"Introduction to Apollo GraphQL"}),"\n",(0,i.jsx)(n.h2,{id:"catstronauts-example-application",children:"Catstronauts Example Application"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Catstronauts will be a full stack GraphQL Example Application of focus within this docusaurus notes."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"schema-first-design",children:"Schema First Design"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:'"Schema-first" design'})," is implements the feature based on exactly which data our client application needs."]}),"\n"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Defining the schema"}),": We identify which data our feature requires, and then we structure our schema to provide that data as intuitively as possible."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Backend implementation"}),": We build out our GraphQL API using Apollo Server and fetch the required data from whichever data sources contain it. In this first course, we will be using mocked data. In a following course, we'll connect our app to a live REST data source."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Frontend implementation"}),": Our client consumes data from our GraphQL API to render its views."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"benefits-of-schema-first-design",children:"Benefits of schema-first design"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Reduces total development time by allowing frontend and backend teams to work in parallel.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"The frontend team can start working with mocked data as soon as the schema is defined"}),"\n",(0,i.jsx)(n.li,{children:"The backend team develops the API based on that same schema."}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var i=t(6540);const s={},o=i.createContext(s);function r(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);